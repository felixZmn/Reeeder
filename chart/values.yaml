database:
  existingSecret: "newsfeed-pguser-newsfeed"
  usernameKey: user
  passwordKey: password
  hostKey: host
  portKey: port
  dbKey: dbname

oauth2Proxy:
  existingSecret: "newsfeed-oauth2proxy"
  clientIdKey: client_id
  clientSecretKey: client_secret
  cookieSecretKey: cookie_secret
  redirect_uri: https://news.0x2b.de/oauth2/callback
  issuer_url: https://authentik.0x2b.de/application/o/newsfeed/
  upstream: http://newsfeed-feedbox.newsfeed.svc.cluster.local:7070
  
  image:
    repository: "quay.io/oauth2-proxy"
    name: "oauth2-proxy"
    tag: "v7.12.0-alpine"
    imagePullPolicy: ""
  
  securityContext: 
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  resources: {}

  service:
    type: ClusterIP
    port: 4180

replicaCount: 1

imagePullSecrets: 
- name: regcred
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
podLabels: {}
nodeSelector: {}
tolerations: []
affinity: {}

image:
  repository: ghcr.io/felixzmn/docker
  name: "feedbox"
  tag: "latest"
  pullPolicy: Always

podSecurityContext: 
  fsGroup: 1000

securityContext: 
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 7070

ingress:
  enabled: true
  className: "nginx"
  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: news.0x2b.de
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
  - secretName: feedbox
    hosts:
      - news.0x2b.de

resources:
  limits:
    cpu: 500m
    memory: 350Mi
  requests:
    cpu: 250m
    memory: 150Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http
